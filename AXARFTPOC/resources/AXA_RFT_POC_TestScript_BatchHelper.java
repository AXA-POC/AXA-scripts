// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>AXA_RFT_POC_TestScript_Batch</b><br>
 * Generated     : <b>2017/09/26 11:54:37 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  September 26, 2017
 * @author jonathan.h.francisco
 */
public abstract class AXA_RFT_POC_TestScript_BatchHelper extends RationalTestScript
{
	/**
	 * IBMExtensionForTerminalBasedApplications: with default state.
	 *		.captionText : IBM Extension for Terminal-based Applications
	 * 		accessibleContext.accessibleRole : frame
	 * 		.class : com.ibm.terminal.tester.gui.panel.TFrame
	 * 		accessibleContext.accessibleName : IBM Extension for Terminal-based Applications
	 */
	protected FTETopLevelTestObject Application() 
	{
		return new FTETopLevelTestObject(
                        getMappedTestObject("Application"));
	}
	/**
	 * IBMExtensionForTerminalBasedApplications: with specific test context and state.
	 *		.captionText : IBM Extension for Terminal-based Applications
	 * 		accessibleContext.accessibleRole : frame
	 * 		.class : com.ibm.terminal.tester.gui.panel.TFrame
	 * 		accessibleContext.accessibleName : IBM Extension for Terminal-based Applications
	 */
	protected FTETopLevelTestObject Application(TestObject anchor, long flags) 
	{
		return new FTETopLevelTestObject(
                        getMappedTestObject("Application"), anchor, flags);
	}
	
	/**
	 * Field_10_24: with default state.
	 *		.startRow : 10
	 * 		.startCol : 24
	 * 		.text : EMPOT18 DEVOPS.**                             
	 * 		.length : 46
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject DsNameLevel() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("DsNameLevel"));
	}
	/**
	 * Field_10_24: with specific test context and state.
	 *		.startRow : 10
	 * 		.startCol : 24
	 * 		.text : EMPOT18 DEVOPS.**                             
	 * 		.length : 46
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject DsNameLevel(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("DsNameLevel"), anchor, flags);
	}
	
	/**
	 * Field_4_14: with default state.
	 *		.startRow : 4
	 * 		.startCol : 14
	 * 		.text :                                                                   
	 * 		.length : 66
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject ISPFoptionField1() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("ISPFoptionField1"));
	}
	/**
	 * Field_4_14: with specific test context and state.
	 *		.startRow : 4
	 * 		.startCol : 14
	 * 		.text :                                                                   
	 * 		.length : 66
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject ISPFoptionField1(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("ISPFoptionField1"), anchor, flags);
	}
	
	/**
	 * Field_4_14: with default state.
	 *		.startRow : 4
	 * 		.startCol : 14
	 * 		.text :                                                                   
	 * 		.length : 66
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject LibraryUtilityOptionField() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("LibraryUtilityOptionField"));
	}
	/**
	 * Field_4_14: with specific test context and state.
	 *		.startRow : 4
	 * 		.startCol : 14
	 * 		.text :                                                                   
	 * 		.length : 66
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject LibraryUtilityOptionField(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("LibraryUtilityOptionField"), anchor, flags);
	}
	
	/**
	 * Field_4_21: with default state.
	 *		.startRow : 4
	 * 		.startCol : 21
	 * 		.text :                                           
	 * 		.length : 42
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject SDSFoutputCommandInput() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("SDSFoutputCommandInput"));
	}
	/**
	 * Field_4_21: with specific test context and state.
	 *		.startRow : 4
	 * 		.startCol : 21
	 * 		.text :                                           
	 * 		.length : 42
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject SDSFoutputCommandInput(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("SDSFoutputCommandInput"), anchor, flags);
	}
	
	/**
	 * Field_4_15: with default state.
	 *		.startRow : 4
	 * 		.startCol : 15
	 * 		.text :                                                 
	 * 		.length : 48
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject commandField() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("commandField"));
	}
	/**
	 * Field_4_15: with specific test context and state.
	 *		.startRow : 4
	 * 		.startCol : 15
	 * 		.text :                                                 
	 * 		.length : 48
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject commandField(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("commandField"), anchor, flags);
	}
	
	/**
	 * Field_4_21: with default state.
	 *		.startRow : 4
	 * 		.startCol : 21
	 * 		.text :                                           
	 * 		.length : 42
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject commandInput() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("commandInput"));
	}
	/**
	 * Field_4_21: with specific test context and state.
	 *		.startRow : 4
	 * 		.startCol : 21
	 * 		.text :                                           
	 * 		.length : 42
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject commandInput(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("commandInput"), anchor, flags);
	}
	
	/**
	 * ConnectUsingTheCurrentConnectionProperties: with default state.
	 *		toolTipText : Connect Using the Current Connection Properties
	 * 		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : &Connect
	 * 		iconDescription : &Connect
	 * 		.classIndex : 4
	 */
	protected GuiTestObject connectButton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("connectButton"));
	}
	/**
	 * ConnectUsingTheCurrentConnectionProperties: with specific test context and state.
	 *		toolTipText : Connect Using the Current Connection Properties
	 * 		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : &Connect
	 * 		iconDescription : &Connect
	 * 		.classIndex : 4
	 */
	protected GuiTestObject connectButton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("connectButton"), anchor, flags);
	}
	
	/**
	 * Field_20_25: with default state.
	 *		.startRow : 20
	 * 		.startCol : 25
	 * 		.text :                                                         
	 * 		.length : 56
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject datasetName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("datasetName"));
	}
	/**
	 * Field_20_25: with specific test context and state.
	 *		.startRow : 20
	 * 		.startCol : 25
	 * 		.text :                                                         
	 * 		.length : 56
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject datasetName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("datasetName"), anchor, flags);
	}
	
	/**
	 * Field_5_1: with default state.
	 *		.startRow : 5
	 * 		.startCol : 1
	 * 		.text : IDC0002I IDCAMS PROCESSING COMPLETE. MAXIMUM CONDITION CODE WAS 0                ...
	 * 		.length : 1600
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject findTextOutput() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("findTextOutput"));
	}
	/**
	 * Field_5_1: with specific test context and state.
	 *		.startRow : 5
	 * 		.startCol : 1
	 * 		.text : IDC0002I IDCAMS PROCESSING COMPLETE. MAXIMUM CONDITION CODE WAS 0                ...
	 * 		.length : 1600
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject findTextOutput(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("findTextOutput"), anchor, flags);
	}
	
	/**
	 * Host: with default state.
	 *		.class : com.ibm.terminal.tester.gui.misc.AccessibleTextField
	 * 		.priorLabel : Host:
	 * 		accessibleContext.accessibleName : Host:
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject host() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("host"));
	}
	/**
	 * Host: with specific test context and state.
	 *		.class : com.ibm.terminal.tester.gui.misc.AccessibleTextField
	 * 		.priorLabel : Host:
	 * 		accessibleContext.accessibleName : Host:
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject host(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("host"), anchor, flags);
	}
	
	/**
	 * Field_6_2: with default state.
	 *		.startRow : 6
	 * 		.startCol : 2
	 * 		.text :     
	 * 		.length : 4
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject leftField() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("leftField"));
	}
	/**
	 * Field_6_2: with specific test context and state.
	 *		.startRow : 6
	 * 		.startCol : 2
	 * 		.text :     
	 * 		.length : 4
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject leftField(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("leftField"), anchor, flags);
	}
	
	/**
	 * Port: with default state.
	 *		.class : com.ibm.terminal.tester.gui.misc.JIntegerTextField
	 * 		.priorLabel : Port:
	 * 		accessibleContext.accessibleName : Port:
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject port() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("port"));
	}
	/**
	 * Port: with specific test context and state.
	 *		.class : com.ibm.terminal.tester.gui.misc.JIntegerTextField
	 * 		.priorLabel : Port:
	 * 		accessibleContext.accessibleName : Port:
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject port(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("port"), anchor, flags);
	}
	
	/**
	 * ScreenSize: with default state.
	 *		.itemCount : 5
	 * 		.itemText : {24x80,32x80,43x80,27x132,Custom RowXCol}
	 * 		.class : com.ibm.terminal.tester.gui.misc.ScreenSizeComboBox
	 * 		.priorLabel : Screen size:
	 * 		accessibleContext.accessibleName : Screen size:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject screenSize() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("screenSize"));
	}
	/**
	 * ScreenSize: with specific test context and state.
	 *		.itemCount : 5
	 * 		.itemText : {24x80,32x80,43x80,27x132,Custom RowXCol}
	 * 		.class : com.ibm.terminal.tester.gui.misc.ScreenSizeComboBox
	 * 		.priorLabel : Screen size:
	 * 		accessibleContext.accessibleName : Screen size:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject screenSize(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("screenSize"), anchor, flags);
	}
	
	/**
	 * Field_21_2: with default state.
	 *		.startRow : 21
	 * 		.startCol : 2
	 * 		.text : IKJ56250I JOB INS01RUN(JOB02014) SUBMITTED
	 * 		.length : 42
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject submitMessage() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("submitMessage"));
	}
	/**
	 * Field_21_2: with specific test context and state.
	 *		.startRow : 21
	 * 		.startCol : 2
	 * 		.text : IKJ56250I JOB INS01RUN(JOB02014) SUBMITTED
	 * 		.length : 42
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject submitMessage(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("submitMessage"), anchor, flags);
	}
	
	/**
	 * TerminalType: with default state.
	 *		.itemCount : 14
	 * 		.itemText : {TN3270E,TN3270,TN5250,VT default,VT100,VT101,VT102,VT220-7,VT220-8,VT320}
	 * 		.class : com.ibm.terminal.tester.gui.misc.TerminalTypeComboBox
	 * 		.priorLabel : Terminal type:
	 * 		accessibleContext.accessibleName : Terminal type:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject terminalType() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("terminalType"));
	}
	/**
	 * TerminalType: with specific test context and state.
	 *		.itemCount : 14
	 * 		.itemText : {TN3270E,TN3270,TN5250,VT default,VT100,VT101,VT102,VT220-7,VT220-8,VT320}
	 * 		.class : com.ibm.terminal.tester.gui.misc.TerminalTypeComboBox
	 * 		.priorLabel : Terminal type:
	 * 		accessibleContext.accessibleName : Terminal type:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject terminalType(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("terminalType"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point processingCompleteVerification object in the SUT.
	 */
	protected IFtVerificationPoint processingCompleteVerificationVP() 
	{
		return vp("processingCompleteVerification");
	}
	protected IFtVerificationPoint processingCompleteVerificationVP(TestObject anchor)
	{
		return vp("processingCompleteVerification", anchor);
	}
	
	/**
	 * Locate and return the verification point submitVerification object in the SUT.
	 */
	protected IFtVerificationPoint submitVerificationVP() 
	{
		return vp("submitVerification");
	}
	protected IFtVerificationPoint submitVerificationVP(TestObject anchor)
	{
		return vp("submitVerification", anchor);
	}
	
	

	protected AXA_RFT_POC_TestScript_BatchHelper()
	{
		setScriptName("AXA_RFT_POC_TestScript_Batch");
	}
	
}

