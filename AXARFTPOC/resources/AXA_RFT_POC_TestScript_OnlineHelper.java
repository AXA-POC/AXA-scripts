// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>AXA_RFT_POC_TestScript_Online</b><br>
 * Generated     : <b>2017/09/26 11:25:59 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  September 26, 2017
 * @author jonathan.h.francisco
 */
public abstract class AXA_RFT_POC_TestScript_OnlineHelper extends RationalTestScript
{
	/**
	 * IBMExtensionForTerminalBasedApplications: with default state.
	 *		.captionText : IBM Extension for Terminal-based Applications
	 * 		accessibleContext.accessibleRole : frame
	 * 		.class : com.ibm.terminal.tester.gui.panel.TFrame
	 * 		accessibleContext.accessibleName : IBM Extension for Terminal-based Applications
	 */
	protected FTETopLevelTestObject Application() 
	{
		return new FTETopLevelTestObject(
                        getMappedTestObject("Application"));
	}
	/**
	 * IBMExtensionForTerminalBasedApplications: with specific test context and state.
	 *		.captionText : IBM Extension for Terminal-based Applications
	 * 		accessibleContext.accessibleRole : frame
	 * 		.class : com.ibm.terminal.tester.gui.panel.TFrame
	 * 		accessibleContext.accessibleName : IBM Extension for Terminal-based Applications
	 */
	protected FTETopLevelTestObject Application(TestObject anchor, long flags) 
	{
		return new FTETopLevelTestObject(
                        getMappedTestObject("Application"), anchor, flags);
	}
	
	/**
	 * ConnectUsingTheCurrentConnectionProperties: with default state.
	 *		toolTipText : Connect Using the Current Connection Properties
	 * 		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : &Connect
	 * 		iconDescription : &Connect
	 * 		.classIndex : 4
	 */
	protected GuiTestObject connectButton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("connectButton"));
	}
	/**
	 * ConnectUsingTheCurrentConnectionProperties: with specific test context and state.
	 *		toolTipText : Connect Using the Current Connection Properties
	 * 		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : &Connect
	 * 		iconDescription : &Connect
	 * 		.classIndex : 4
	 */
	protected GuiTestObject connectButton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("connectButton"), anchor, flags);
	}
	
	/**
	 * CouldNotConnectToHost: with default state.
	 *		text : Could not connect to host!
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : Could not connect to host!
	 * 		name : OptionPane.label
	 * 		.classIndex : 0
	 */
	protected GuiTestObject couldNotConnectToHost() 
	{
		return new GuiTestObject(
                        getMappedTestObject("couldNotConnectToHost"));
	}
	/**
	 * CouldNotConnectToHost: with specific test context and state.
	 *		text : Could not connect to host!
	 * 		.class : javax.swing.JLabel
	 * 		accessibleContext.accessibleName : Could not connect to host!
	 * 		name : OptionPane.label
	 * 		.classIndex : 0
	 */
	protected GuiTestObject couldNotConnectToHost(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("couldNotConnectToHost"), anchor, flags);
	}
	
	/**
	 * DisconnectFromTheHost: with default state.
	 *		toolTipText : Disconnect from the Host
	 * 		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : &Disconnect
	 * 		iconDescription : &Disconnect
	 * 		.classIndex : 5
	 */
	protected GuiTestObject disconnectButton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("disconnectButton"));
	}
	/**
	 * DisconnectFromTheHost: with specific test context and state.
	 *		toolTipText : Disconnect from the Host
	 * 		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : &Disconnect
	 * 		iconDescription : &Disconnect
	 * 		.classIndex : 5
	 */
	protected GuiTestObject disconnectButton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("disconnectButton"), anchor, flags);
	}
	
	/**
	 * Enter: with default state.
	 *		.class : com.ibm.eNetwork.HOD.common.gui.HButton
	 * 		accessibleContext.accessibleName : Enter
	 * 		.classIndex : 6
	 */
	protected GuiTestObject enter() 
	{
		return new GuiTestObject(
                        getMappedTestObject("enter"));
	}
	/**
	 * Enter: with specific test context and state.
	 *		.class : com.ibm.eNetwork.HOD.common.gui.HButton
	 * 		accessibleContext.accessibleName : Enter
	 * 		.classIndex : 6
	 */
	protected GuiTestObject enter(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("enter"), anchor, flags);
	}
	
	/**
	 * Host: with default state.
	 *		.class : com.ibm.terminal.tester.gui.misc.AccessibleTextField
	 * 		.priorLabel : Host:
	 * 		accessibleContext.accessibleName : Host:
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject host() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("host"));
	}
	/**
	 * Host: with specific test context and state.
	 *		.class : com.ibm.terminal.tester.gui.misc.AccessibleTextField
	 * 		.priorLabel : Host:
	 * 		accessibleContext.accessibleName : Host:
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject host(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("host"), anchor, flags);
	}
	
	/**
	 * Field_5_54: with default state.
	 *		.startRow : 5
	 * 		.startCol : 54
	 * 		.text :             
	 * 		.length : 12
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject mk00_firstName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mk00_firstName"));
	}
	/**
	 * Field_5_54: with specific test context and state.
	 *		.startRow : 5
	 * 		.startCol : 54
	 * 		.text :             
	 * 		.length : 12
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject mk00_firstName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mk00_firstName"), anchor, flags);
	}
	
	/**
	 * Field_5_21: with default state.
	 *		.startRow : 5
	 * 		.startCol : 21
	 * 		.text :                   
	 * 		.length : 18
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject mk00_lastName() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mk00_lastName"));
	}
	/**
	 * Field_5_21: with specific test context and state.
	 *		.startRow : 5
	 * 		.startCol : 21
	 * 		.text :                   
	 * 		.length : 18
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject mk00_lastName(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mk00_lastName"), anchor, flags);
	}
	
	/**
	 * Field_23_4: with default state.
	 *		.startRow : 23
	 * 		.startCol : 4
	 * 		.text : THERE ARE MORE MATCHING NAMES. <ENTER> TO CONTINUE.                              ...
	 * 		.length : 157
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject mk00_messageText() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mk00_messageText"));
	}
	/**
	 * Field_23_4: with specific test context and state.
	 *		.startRow : 23
	 * 		.startCol : 4
	 * 		.text : THERE ARE MORE MATCHING NAMES. <ENTER> TO CONTINUE.                              ...
	 * 		.length : 157
	 * 		.class : com.ibm.eNetwork.ECL.ECLField
	 */
	protected TextGuiTestObject mk00_messageText(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mk00_messageText"), anchor, flags);
	}
	
	/**
	 * Port: with default state.
	 *		.class : com.ibm.terminal.tester.gui.misc.JIntegerTextField
	 * 		.priorLabel : Port:
	 * 		accessibleContext.accessibleName : Port:
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject port() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("port"));
	}
	/**
	 * Port: with specific test context and state.
	 *		.class : com.ibm.terminal.tester.gui.misc.JIntegerTextField
	 * 		.priorLabel : Port:
	 * 		accessibleContext.accessibleName : Port:
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject port(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("port"), anchor, flags);
	}
	
	/**
	 * ScreenSize: with default state.
	 *		.itemCount : 5
	 * 		.itemText : {24x80,32x80,43x80,27x132,Custom RowXCol}
	 * 		.class : com.ibm.terminal.tester.gui.misc.ScreenSizeComboBox
	 * 		.priorLabel : Screen size:
	 * 		accessibleContext.accessibleName : Screen size:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject screenSize() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("screenSize"));
	}
	/**
	 * ScreenSize: with specific test context and state.
	 *		.itemCount : 5
	 * 		.itemText : {24x80,32x80,43x80,27x132,Custom RowXCol}
	 * 		.class : com.ibm.terminal.tester.gui.misc.ScreenSizeComboBox
	 * 		.priorLabel : Screen size:
	 * 		accessibleContext.accessibleName : Screen size:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject screenSize(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("screenSize"), anchor, flags);
	}
	
	/**
	 * TerminalType: with default state.
	 *		.itemCount : 14
	 * 		.itemText : {TN3270E,TN3270,TN5250,VT default,VT100,VT101,VT102,VT220-7,VT220-8,VT320}
	 * 		.class : com.ibm.terminal.tester.gui.misc.TerminalTypeComboBox
	 * 		.priorLabel : Terminal type:
	 * 		accessibleContext.accessibleName : Terminal type:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject terminalType() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("terminalType"));
	}
	/**
	 * TerminalType: with specific test context and state.
	 *		.itemCount : 14
	 * 		.itemText : {TN3270E,TN3270,TN5250,VT default,VT100,VT101,VT102,VT220-7,VT220-8,VT320}
	 * 		.class : com.ibm.terminal.tester.gui.misc.TerminalTypeComboBox
	 * 		.priorLabel : Terminal type:
	 * 		accessibleContext.accessibleName : Terminal type:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject terminalType(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("terminalType"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point mk00_moretext_checkpoint object in the SUT.
	 */
	protected IFtVerificationPoint mk00_moretext_checkpointVP() 
	{
		return vp("mk00_moretext_checkpoint");
	}
	protected IFtVerificationPoint mk00_moretext_checkpointVP(TestObject anchor)
	{
		return vp("mk00_moretext_checkpoint", anchor);
	}
	
	

	protected AXA_RFT_POC_TestScript_OnlineHelper()
	{
		setScriptName("AXA_RFT_POC_TestScript_Online");
	}
	
}

